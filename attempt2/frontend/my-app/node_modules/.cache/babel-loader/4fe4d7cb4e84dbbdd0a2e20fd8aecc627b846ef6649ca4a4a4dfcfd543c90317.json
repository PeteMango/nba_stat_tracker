{"ast":null,"code":"var _jsxFileName = \"/Users/normanchen/Documents/nba_stat_tracker/attempt2/frontend/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const [stats, setStats] = useState(\n  //   {\n  //   assists: 0,\n  //   blocks: 0,\n  //   drebounds: 0,\n  //   }\n  // );\n\n  const [assists, setAssists] = useState(null);\n\n  // function getData() {\n  //   axios({\n  //     method: \"GET\",\n  //     url: \"/playerstats\",\n  //   })\n  //   .then((response) => {\n  //     const res = response.data\n  //     setStats(({\n  //       assists: res.ast,\n  //       blocks: res.blk,\n  //       drebounds: res.dreb\n  //     }))     \n  //   }).catch((error) => {\n  //     if (error.response) {\n  //       console.log(error.response)\n  //       console.log(error.response.status)\n  //       console.log(error.response.headers)\n  //     }\n  //   })\n  // }\n\n  // useEffect( () => {\n  //   fetch(\"/playerstats\").then((res) =>\n  //     res.json().then((data) => {\n  //       setStats({\n  //         assists: data.ast,\n  //         blocks: data.blk,\n  //         drebounds: data.dreb,\n  //       });\n  //     })\n  //   );\n  // }, []);\n\n  useEffect(() => {\n    fetch('/playerstats').then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw response;\n    }).then(data => {\n      setAssists(data.ast);\n    }).catch(error => {\n      console.log(error);\n    });\n  });\n\n  // useEffect(() => {\n  //   var responseClone;\n  //   fetch('http://localhost:5000/playerstats').then(response => {\n  //     responseClone = response.clone();\n  //     if (response.ok){\n  //       return response.json()\n  //     } throw response;\n  //   }).then(data => {\n  //     setAssists(data.ast)\n  //   }).catch(error => {\n  //     console.log(error)\n  //     console.log('response clone is: ', responseClone);\n  //     responseClone.text()\n  //     .then(bodyText => {\n  //       console.log('received the following instead of valid JSON: ', bodyText)\n  //     })\n  //   })\n  // })\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"testing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: assists\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WpCQT5ij2ko7N/HxsduqJ6aRtME=\");\n_c = App;\nexport default App;\n\n/*\n      ast: \"\",\n      blk: \"\",\n      dreb: \"\",\n      fg3_pct: \"\",\n      fg3a: \"\",\n      fg3m: \"\",\n      fg_pct: \"\",\n      fga: \"\",\n      fgm: \"\",\n      ft_pct: \"\",\n      fta: \"\",\n      ftm: \"\",\n      games_played: \"\",\n      min: \"\",\n      oreb: \"\",\n      pf: \"\",\n      player_id: \"\",\n      pts: \"\",\n      reb: \"\",\n      season: \"\",\n      stl: \"\",\n      turnover: \"\",      \n      */\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","App","assists","setAssists","fetch","then","response","ok","json","data","ast","catch","error","console","log"],"sources":["/Users/normanchen/Documents/nba_stat_tracker/attempt2/frontend/my-app/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from \"axios\";\nimport './App.css';\n\n\nfunction App() {\n\n  // const [stats, setStats] = useState(\n  //   {\n  //   assists: 0,\n  //   blocks: 0,\n  //   drebounds: 0,\n  //   }\n  // );\n\n  const [assists, setAssists] = useState(null)\n\n  // function getData() {\n  //   axios({\n  //     method: \"GET\",\n  //     url: \"/playerstats\",\n  //   })\n  //   .then((response) => {\n  //     const res = response.data\n  //     setStats(({\n  //       assists: res.ast,\n  //       blocks: res.blk,\n  //       drebounds: res.dreb\n  //     }))     \n  //   }).catch((error) => {\n  //     if (error.response) {\n  //       console.log(error.response)\n  //       console.log(error.response.status)\n  //       console.log(error.response.headers)\n  //     }\n  //   })\n  // }\n\n  // useEffect( () => {\n  //   fetch(\"/playerstats\").then((res) =>\n  //     res.json().then((data) => {\n  //       setStats({\n  //         assists: data.ast,\n  //         blocks: data.blk,\n  //         drebounds: data.dreb,\n  //       });\n  //     })\n  //   );\n  // }, []);\n\n  useEffect(() => {\n    fetch('/playerstats').then(response => {\n        if(response.ok) {\n            return response.json()\n        } throw response;\n    }).then(data => {\n      setAssists(data.ast)\n    }).catch(error => {\n      console.log(error)\n    })\n})\n\n// useEffect(() => {\n//   var responseClone;\n//   fetch('http://localhost:5000/playerstats').then(response => {\n//     responseClone = response.clone();\n//     if (response.ok){\n//       return response.json()\n//     } throw response;\n//   }).then(data => {\n//     setAssists(data.ast)\n//   }).catch(error => {\n//     console.log(error)\n//     console.log('response clone is: ', responseClone);\n//     responseClone.text()\n//     .then(bodyText => {\n//       console.log('received the following instead of valid JSON: ', bodyText)\n//     })\n//   })\n// })\n\n\n  return (\n    <div className=\"App\">\n      <div>testing</div>\n      <div>{assists}</div>\n      {/* <div>{stats.blocks}</div> */}\n      {/* <div>{stats.drebounds}</div> */}\n    </div>\n  );\n}\n\nexport default App;\n\n\n/*\n      ast: \"\",\n      blk: \"\",\n      dreb: \"\",\n      fg3_pct: \"\",\n      fg3a: \"\",\n      fg3m: \"\",\n      fg_pct: \"\",\n      fga: \"\",\n      fgm: \"\",\n      ft_pct: \"\",\n      fta: \"\",\n      ftm: \"\",\n      games_played: \"\",\n      min: \"\",\n      oreb: \"\",\n      pf: \"\",\n      player_id: \"\",\n      pts: \"\",\n      reb: \"\",\n      season: \"\",\n      stl: \"\",\n      turnover: \"\",      \n      */"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAAC;AAGnB,SAASC,GAAG,GAAG;EAAA;EAEb;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAC,SAAS,CAAC,MAAM;IACdK,KAAK,CAAC,cAAc,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;MACnC,IAAGA,QAAQ,CAACC,EAAE,EAAE;QACZ,OAAOD,QAAQ,CAACE,IAAI,EAAE;MAC1B;MAAE,MAAMF,QAAQ;IACpB,CAAC,CAAC,CAACD,IAAI,CAACI,IAAI,IAAI;MACdN,UAAU,CAACM,IAAI,CAACC,GAAG,CAAC;IACtB,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAI;MAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGE,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,UAAK;IAAO;MAAA;MAAA;MAAA;IAAA,QAAM,eAClB;MAAA,UAAMV;IAAO;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAGhB;AAEV;AAAC,GArFQD,GAAG;AAAA,KAAHA,GAAG;AAuFZ,eAAeA,GAAG;;AAGlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}